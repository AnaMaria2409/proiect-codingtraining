#%RAML
title: CODING TRAINING API
baseUri: localhost:8080/CodingTraining
version: v0.1

traits:

  /login:
      description: Returns a Json Web Token if username and password are valid
      get: 
      description: Create a new token
        queryParameters:
          username:
            description: The username of an exitsting user
            example: jhon.doe 
            required: true
            type: string
          password:
            description: The the encoded password for the username
            example: aasdssf==
            required: true
            type: string
      response:
      200:
      body:
            application/json:
              example: |
                {
                  "token": "sdfhdsuif189231hddjkhfuy2378r3uidshfu"
              }
      401:
          body:
            application/json:
              example: |
                    {
                      "message": "Username incorrect or already exists!"
                    }

  /register:
      description: Add a new user in database and returns a token if username and password are valid
      post:
      description: Get a confirmation message
      response:
      200:
      body:
            application/json:
              example: |
                {
                  "token": "Account successfully created!",
                }
      401:
      application/json:
          body:
            application/json:
              example: |
                {
                  "message": "Can't create the account!"
                }



  /questions:
    description: Collection of all questions in CodingTraining.
    get:
      description: Get a list of questions.
      category:php, java, HTML, javascript, C.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "questions": [
                    {
                      "questionId": "0",
                      "continut": "How many bits have an Integer?",
                      "categorie": "C",
                      "dificultate":"usor",
                      "vizualizari":"14",
                      "scor":"5".
                    },
                    {
                      "questionId": "1",
                      "continut": "Which is the filed for a button?"
                      "categorie": "HTML",
                      "dificultate":"intermediar",
                      "vizualizari":"9",
                      "scor":"4.2".
                    }
                  ]
                }
    /questions/{category}:
    description: Collection from specific category in CodingTraining.
    get:
      description: Get a list of questions.
      category:{category}
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "questions": 
                    {
                      "questionId": "0",
                      "continut": "How many bits have an Integer?",
                      "categorie": "C",
                      "dificultate":"usor",
                      "vizualizari":"14",
                      "scor":"5".
                  
                }
    

  /answerToQuestion:
      description: Return a message if the answer of a question was added correct
      post: 
      description: Add the answer of an user at a question
      queryParameters:
          questionID:
            description: The order number of question in database
            example: 3 
            required: true
            type: integer
          questionAnswer:
            description: The content of answer
            example: The tag is <br/>
            required: true
            type: string
          access_token:
            description: The access token provided by the authentication application
            example: ALDFD8023bffb32h302302hfbfff202032oj3fbif9020320nfo3f9
            required: true
            type: string
      response:
      200:
      body:
      application/json:
              example: |
                {
                  "response":  "The answer was added!",
                }
      401:
      body:
            application/json:
              example: |
                {
                    "message": "Unauthorized token !"
                }
                
  /questionsOwned:
      description: Collection of all the questions that an user own
      get:
      description: Get a list of owned questions.
      queryParameters:
        access_token:
            description: The access token provided by the authentication application
            example: ALDFD 
            required: true
            type: string
      response:
      200:
      body:
      application/json:
              example: |
                { 
                    "questions": 
                    {
                      "questionId": "1",
                      "continut": "How many bits have an Integer?",
                      "categorie": "C",
                      "dificultate":"usor",
                      "vizualizari":"14",
                      "scor":"5".
                    }
                }

  /questionsSolved:
      description: Collection of all the questions that a user has answered.
      get:
      description: Get a list of answered questions.
      queryParameters:
        access_token:
            description: The access token provided by the authentication application
            example: ALDFD 
            required: true
            type: string
      response:
      200:
      body:
      application/json:
              example: |
                {
                  "questions": 
                    {
                      "questionId": "1",
                      "continut": "How many bits have an Integer?",
                      "categorie": "C",
                      "dificultate":"usor",
                      "vizualizari":"14",
                      "scor":"5",
                      "coninutfeedback":"Your answered is awesome",
                      "validitate":"correct"
                    }
                }

  /answerstoquestionOwned:
      description: Collection of all the answers of a specifique question
      get:
        description: Get a list of answeres.
        queryParameters:
          access_token:
            description: The access token provided by the authentication application
            example: ALDFD 
            required: true
            type: string
          questionID:
            description: The order number of question in database
            example: 3 
            required: true
            type: integer
      response:
      200:
      body:
      application/json:
              example: |
                {
                  "answers": 
                    {
                      "id":"1",                    
                      "username":"jhon.doe",
                      "answer": "<input type="button">"
                    }
                  }
      401: body:
            application/json:
              example: |
                {
                  "response": 
                    {
                      "content": "Unauthorized token !"
                    }
                }

  /evaluateAnswer:
      description: Add an evaluation to an answer
      post: 
      description: Create a feedback
        queryParameters:
            access_token:
            description: The access token provided by the authentication application
            example: ALDFD 
            required: true
            type: string
          answerID:
            description: The order number of question in database
            example: 3 
            required: true
            type: integer
          feedback:
            description: The user message
            example: You have a little mistake
            required: true
            type: string
          validitate:
            description: A mark for the answer
            example: Incorrect
            required: true
            type: string
      response:
      200:
      body:
      application/json:
              example: |
                {
                    response:"The feedback was added!";
                }
    

